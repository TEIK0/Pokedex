// Mocks generated by Mockito 5.4.0 from annotations
// in poke_app/test/features/favorite_pokemon/domain/usecases/presentation/bloc/favorite_pokemon_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:poke_app/core/database/db_provider.dart' as _i2;
import 'package:poke_app/core/entities/pokemon.dart' as _i7;
import 'package:poke_app/core/error/failure.dart' as _i6;
import 'package:poke_app/core/models/core_models.dart' as _i8;
import 'package:poke_app/features/favorite_pokemon/data/repositories/favorite_pokemon_repository_impl.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDBProvider_0 extends _i1.SmartFake implements _i2.DBProvider {
  _FakeDBProvider_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavoritePokemonRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoritePokemonRepositoryImpl extends _i1.Mock
    implements _i4.FavoritePokemonRepositoryImpl {
  @override
  _i2.DBProvider get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeDBProvider_0(
          this,
          Invocation.getter(#db),
        ),
        returnValueForMissingStub: _FakeDBProvider_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.DBProvider);
  @override
  _i5.Future<_i3.Either<_i6.Failure, int>> deleteFavoritePokemon(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFavoritePokemon,
          [index],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, int>>.value(
            _FakeEither_1<_i6.Failure, int>(
          this,
          Invocation.method(
            #deleteFavoritePokemon,
            [index],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, int>>.value(
                _FakeEither_1<_i6.Failure, int>(
          this,
          Invocation.method(
            #deleteFavoritePokemon,
            [index],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, int>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Pokemon>> getFavoritePokemon(
          int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavoritePokemon,
          [index],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Pokemon>>.value(
            _FakeEither_1<_i6.Failure, _i7.Pokemon>(
          this,
          Invocation.method(
            #getFavoritePokemon,
            [index],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, _i7.Pokemon>>.value(
                _FakeEither_1<_i6.Failure, _i7.Pokemon>(
          this,
          Invocation.method(
            #getFavoritePokemon,
            [index],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.Pokemon>>);
  @override
  _i5.Future<
      _i3.Either<_i6.Failure,
          List<_i8.PokemonModel>>> showFavoritePokemonList() =>
      (super.noSuchMethod(
        Invocation.method(
          #showFavoritePokemonList,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i8.PokemonModel>>>.value(
                _FakeEither_1<_i6.Failure, List<_i8.PokemonModel>>(
          this,
          Invocation.method(
            #showFavoritePokemonList,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i8.PokemonModel>>>.value(
                _FakeEither_1<_i6.Failure, List<_i8.PokemonModel>>(
          this,
          Invocation.method(
            #showFavoritePokemonList,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i8.PokemonModel>>>);
}
