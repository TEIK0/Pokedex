// Mocks generated by Mockito 5.4.0 from annotations
// in poke_app/test/features/pokemon_search/data/repositories/pokemon_search_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:poke_app/core/error/failure.dart' as _i5;
import 'package:poke_app/core/models/core_models.dart' as _i6;
import 'package:poke_app/core/network/network_info.dart' as _i7;
import 'package:poke_app/features/pokemon_search/data/datasources/pokemon_search_remote_data_source.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonSearchRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonSearchRemoteDataSource extends _i1.Mock
    implements _i3.PokemonSearchRemoteDataSource {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PokemonModel>> getPokemon(
          String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemon,
          [name],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.PokemonModel>>.value(
                _FakeEither_0<_i5.Failure, _i6.PokemonModel>(
          this,
          Invocation.method(
            #getPokemon,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.PokemonModel>>.value(
                _FakeEither_0<_i5.Failure, _i6.PokemonModel>(
          this,
          Invocation.method(
            #getPokemon,
            [name],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PokemonModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
